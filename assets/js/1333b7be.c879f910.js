"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[24941],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(n),f=o,d=u["".concat(s,".").concat(f)]||u[f]||m[f]||a;return n?r.createElement(d,i(i({ref:t},l),{},{components:n})):r.createElement(d,i({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:o,i[1]=p;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7487:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const a={id:"piping",title:"Piping"},i=void 0,p={unversionedId:"zio-process/piping",id:"zio-process/piping",title:"Piping",description:"You can pipe the output of one process as the input to another. For example, if you want to return a list of all running",source:"@site/docs/zio-process/piping.md",sourceDirName:"zio-process",slug:"/zio-process/piping",permalink:"/zio-process/piping",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/zio-process/piping.md",tags:[],version:"current",frontMatter:{id:"piping",title:"Piping"},sidebar:"ecosystem-sidebar",previous:{title:"Basics",permalink:"/zio-process/basics"},next:{title:"Interactive Processes",permalink:"/zio-process/interactive-processes"}},s={},c=[{value:"Manually",id:"manually",level:3},{value:"Using the pipe operator",id:"using-the-pipe-operator",level:3}],l={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You can pipe the output of one process as the input to another. For example, if you want to return a list of all running\nJava process IDs, you can do the following:"),(0,o.kt)("h3",{id:"manually"},"Manually"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'val processes = Command("ps", "-ef").stream\nval javaProcesses = Command("grep", "java").stdin(ProcessInput.fromStream(processes)).stream\nval processIds = Command("awk", "{print $2}").stdin(ProcessInput.fromStream(javaProcesses)).lines\n')),(0,o.kt)("h3",{id:"using-the-pipe-operator"},"Using the pipe operator"),(0,o.kt)("p",null,"Rather than connecting the outputs and inputs manually, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"|")," operator\n(or its named equivalent, ",(0,o.kt)("inlineCode",{parentName:"p"},"pipe"),") like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'(Command("ps", "-ef") | Command("grep", "java") | Command("awk", "{print $2}")).lines\n')))}m.isMDXComponent=!0}}]);