"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[47188],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(t),d=i,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return t?r.createElement(f,a(a({ref:n},p),{},{components:t})):r.createElement(f,a({ref:n},p))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[u]="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},77010:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=t(87462),i=(t(67294),t(3905));const o={id:"clock",title:"Clock"},a=void 0,c={unversionedId:"reference/services/clock",id:"reference/services/clock",title:"Clock",description:"Clock service contains some functionality related to time and scheduling.",source:"@site/docs/reference/services/clock.md",sourceDirName:"reference/services",slug:"/reference/services/clock",permalink:"/reference/services/clock",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/reference/services/clock.md",tags:[],version:"current",frontMatter:{id:"clock",title:"Clock"},sidebar:"reference-sidebar",previous:{title:"Console",permalink:"/reference/services/console"},next:{title:"Random",permalink:"/reference/services/random"}},l={},s=[],p={toc:s},u="wrapper";function m(e){let{components:n,...t}=e;return(0,i.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Clock service contains some functionality related to time and scheduling. "),(0,i.kt)("p",null,"To get the current time in a specific time unit, the ",(0,i.kt)("inlineCode",{parentName:"p"},"currentTime")," function takes a unit as ",(0,i.kt)("inlineCode",{parentName:"p"},"TimeUnit")," and returns ",(0,i.kt)("inlineCode",{parentName:"p"},"UIO[Long]"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala",metastring:"compile-only","compile-only":!0},"import zio._\nimport java.util.concurrent.TimeUnit\n\nval inMilliseconds: UIO[Long] = Clock.currentTime(TimeUnit.MILLISECONDS)\nval inDays        : UIO[Long] = Clock.currentTime(TimeUnit.DAYS)\n")),(0,i.kt)("p",null,"To get current date time in the current timezone the ",(0,i.kt)("inlineCode",{parentName:"p"},"currentDateTime")," function returns a ZIO effect containing ",(0,i.kt)("inlineCode",{parentName:"p"},"OffsetDateTime"),"."),(0,i.kt)("p",null,"Also, the Clock service has a very useful functionality for sleeping and creating a delay between jobs. The ",(0,i.kt)("inlineCode",{parentName:"p"},"sleep")," takes a ",(0,i.kt)("inlineCode",{parentName:"p"},"Duration")," and sleeps for the specified duration. It is analogous to ",(0,i.kt)("inlineCode",{parentName:"p"},"java.lang.Thread.sleep")," function, but it doesn't block any underlying thread. It's completely non-blocking."),(0,i.kt)("p",null,"In the following example we are going to print the current time periodically by placing a one second ",(0,i.kt)("inlineCode",{parentName:"p"},"sleep")," between each print call:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala",metastring:"compile-only","compile-only":!0},"import zio._\n\ndef printTimeForever: ZIO[Any, Throwable, Nothing] =\n  Clock.currentDateTime.flatMap(Console.printLine(_)) *>\n    ZIO.sleep(1.seconds) *> printTimeForever\n")),(0,i.kt)("p",null,"For scheduling purposes like retry and repeats, ZIO has a great data type called ",(0,i.kt)("a",{parentName:"p",href:"/reference/schedule/"},"Schedule"),"."))}m.isMDXComponent=!0}}]);