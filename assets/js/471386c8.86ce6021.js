"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[1571],{3905:(e,n,t)=>{t.d(n,{Zo:()=>f,kt:()=>g});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},f=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,f=l(e,["components","mdxType","originalType","parentName"]),p=c(t),m=a,g=p["".concat(s,".").concat(m)]||p[m]||u[m]||i;return t?r.createElement(g,o(o({ref:n},f),{},{components:t})):r.createElement(g,o({ref:n},f))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},96636:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=t(87462),a=(t(67294),t(3905));const i={id:"filtering-the-success-channel",title:"Filtering the Success Channel"},o=void 0,l={unversionedId:"reference/error-management/operations/filtering-the-success-channel",id:"reference/error-management/operations/filtering-the-success-channel",title:"Filtering the Success Channel",description:"ZIO has a variety of operators that can filter values on the success channel based on a given predicate, and if the predicate fails, we can use different strategies:",source:"@site/docs/reference/error-management/operations/filtering-the-success-channel.md",sourceDirName:"reference/error-management/operations",slug:"/reference/error-management/operations/filtering-the-success-channel",permalink:"/reference/error-management/operations/filtering-the-success-channel",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/reference/error-management/operations/filtering-the-success-channel.md",tags:[],version:"current",frontMatter:{id:"filtering-the-success-channel",title:"Filtering the Success Channel"},sidebar:"reference-sidebar",previous:{title:"Chaining Effects Based on Errors",permalink:"/reference/error-management/operations/chaining-effects-based-on-errors"},next:{title:"Tapping Errors",permalink:"/reference/error-management/operations/tapping-errors"}},s={},c=[],f={toc:c},p="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"ZIO has a variety of operators that can filter values on the success channel based on a given predicate, and if the predicate fails, we can use different strategies:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Failing the original effect (",(0,a.kt)("inlineCode",{parentName:"li"},"ZIO#filterOrFail"),")"),(0,a.kt)("li",{parentName:"ul"},"Dying the original effect (",(0,a.kt)("inlineCode",{parentName:"li"},"ZIO#filterOrDie")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"ZIO#filterOrDieMessage"),")"),(0,a.kt)("li",{parentName:"ul"},"Running an alternative ZIO effect (",(0,a.kt)("inlineCode",{parentName:"li"},"ZIO#filterOrElse")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"ZIO#filterOrElseWith"),")")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'import zio._\n\ndef getNumber: ZIO[Any, Nothing, Int] =\n  (Console.print("Please enter a non-negative number: ") *>\n    Console.readLine.mapAttempt(_.toInt))\n    .retryUntil(!_.isInstanceOf[NumberFormatException]).orDie\n\nval r1: ZIO[Any, String, Int] =\n  Random.nextInt.filterOrFail(_ >= 0)("random number is negative")\n\nval r2: ZIO[Any, Nothing, Int] =\n  Random.nextInt.filterOrDie(_ >= 0)(\n    new IllegalArgumentException("random number is negative")\n  )\n\nval r3: ZIO[Any, Nothing, Int] =\n  Random.nextInt.filterOrDieMessage(_ >= 0)("random number is negative")\n\nval r4: ZIO[Any, Nothing, Int] =\n  Random.nextInt.filterOrElse(_ >= 0)(getNumber)\n\nval r5: ZIO[Any, Nothing, Int] =\n  Random.nextInt.filterOrElseWith(_ >= 0)(x => ZIO.succeed(-x))\n')))}u.isMDXComponent=!0}}]);