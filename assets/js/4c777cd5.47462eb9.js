"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[38417],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,d=u["".concat(s,".").concat(m)]||u[m]||b[m]||a;return n?r.createElement(d,c(c({ref:t},l),{},{components:n})):r.createElement(d,c({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:o,c[1]=i;for(var p=2;p<a;p++)c[p]=n[p];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8861:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>b,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={id:"websocket",title:"WebSocket Example",sidebar_label:"WebSocket"},c=void 0,i={unversionedId:"zio-http/examples/basic/websocket",id:"zio-http/examples/basic/websocket",title:"WebSocket Example",description:"",source:"@site/docs/zio-http/examples/basic/websocket.md",sourceDirName:"zio-http/examples/basic",slug:"/zio-http/examples/basic/websocket",permalink:"/zio-http/examples/basic/websocket",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/zio-http/examples/basic/websocket.md",tags:[],version:"current",frontMatter:{id:"websocket",title:"WebSocket Example",sidebar_label:"WebSocket"},sidebar:"ecosystem-sidebar",previous:{title:"Https Server",permalink:"/zio-http/examples/basic/https-server"},next:{title:"Authentication Server",permalink:"/zio-http/examples/advanced/authentication-server"}},s={},p=[],l={toc:p},u="wrapper";function b(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import zio._\n\nimport zio.http.ChannelEvent.Read\nimport zio.http._\n\nobject WebSocketEcho extends ZIOAppDefault {\n  private val socketApp: SocketApp[Any] =\n    Handler.webSocket { channel =>\n      channel.receiveAll {\n        case Read(WebSocketFrame.Text("FOO")) =>\n          channel.send(Read(WebSocketFrame.text("BAR")))\n\n        case Read(WebSocketFrame.Text("BAR")) =>\n          channel.send(Read(WebSocketFrame.text("FOO")))\n\n        case Read(WebSocketFrame.Text(text)) =>\n          channel.send(Read(WebSocketFrame.text(text))).repeatN(10)\n\n        case _ =>\n          ZIO.unit\n      }\n    }\n\n  private val app: Http[Any, Nothing, Request, Response] =\n    Http.collectZIO[Request] {\n      case Method.GET -> Root / "greet" / name  => ZIO.succeed(Response.text(s"Greetings {$name}!"))\n      case Method.GET -> Root / "subscriptions" => socketApp.toResponse\n    }\n\n  override val run = Server.serve(app).provide(Server.default)\n}\n\n')))}b.isMDXComponent=!0}}]);