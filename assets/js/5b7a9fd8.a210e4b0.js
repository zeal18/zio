"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[56126],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),l=p(t),f=a,h=l["".concat(c,".").concat(f)]||l[f]||m[f]||o;return t?r.createElement(h,s(s({ref:n},u),{},{components:t})):r.createElement(h,s({ref:n},u))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=f;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[l]="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},34552:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=t(87462),a=(t(67294),t(3905));const o={id:"exposing-the-cause-in-the-success-channel",title:"Exposing the Cause in The Success Channel"},s=void 0,i={unversionedId:"reference/error-management/operations/exposing-the-cause-in-the-success-channel",id:"reference/error-management/operations/exposing-the-cause-in-the-success-channel",title:"Exposing the Cause in The Success Channel",description:"Using the ZIO#cause operation we can expose the cause, and then by using ZIO#uncause we can reverse this operation:",source:"@site/docs/reference/error-management/operations/exposing-the-cause-in-the-succcess-channel.md",sourceDirName:"reference/error-management/operations",slug:"/reference/error-management/operations/exposing-the-cause-in-the-success-channel",permalink:"/reference/error-management/operations/exposing-the-cause-in-the-success-channel",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/reference/error-management/operations/exposing-the-cause-in-the-succcess-channel.md",tags:[],version:"current",frontMatter:{id:"exposing-the-cause-in-the-success-channel",title:"Exposing the Cause in The Success Channel"},sidebar:"reference-sidebar",previous:{title:"Exposing Errors in The Success Channel",permalink:"/reference/error-management/operations/exposing-errors-in-the-success-channel"},next:{title:"Converting Defects to Failures",permalink:"/reference/error-management/operations/converting-defects-to-failures"}},c={},p=[],u={toc:p},l="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(l,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Using the ",(0,a.kt)("inlineCode",{parentName:"p"},"ZIO#cause")," operation we can expose the cause, and then by using ",(0,a.kt)("inlineCode",{parentName:"p"},"ZIO#uncause")," we can reverse this operation:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"trait ZIO[-R, +E, +A] {\n  def cause: URIO[R, Cause[E]]\n  def uncause[E1 >: E](implicit ev: A IsSubtypeOfOutput Cause[E1]): ZIO[R, E1, Unit]\n}\n")),(0,a.kt)("p",null,"In the following example, we expose and then untrace the underlying cause:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'import zio._\n\nobject MainApp extends ZIOAppDefault {\n  val f1: ZIO[Any, String, Int] =\n    ZIO.fail("Oh uh!").as(1)\n\n  val f2: ZIO[Any, String, Int] =\n    ZIO.fail("Oh error!").as(2)\n\n  val myApp: ZIO[Any, String, (Int, Int)] = f1 zipPar f2\n\n  def run = myApp.cause.map(_.untraced).debug\n}\n')),(0,a.kt)("p",null,"Sometimes the ",(0,a.kt)("a",{parentName:"p",href:"/reference/error-management/operations/map-operations#ziomaperrorziomaperrorcause"},(0,a.kt)("inlineCode",{parentName:"a"},"ZIO#mapErrorCause"))," operator is a better choice when we just want to map the underlying cause without exposing the cause."))}m.isMDXComponent=!0}}]);