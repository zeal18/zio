"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[65813],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(67294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(r),m=s,d=u["".concat(c,".").concat(m)]||u[m]||f[m]||a;return r?n.createElement(d,o(o({ref:t},p),{},{components:r})):n.createElement(d,o({ref:t},p))}));function d(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=r.length,o=new Array(a);o[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:s,o[1]=i;for(var l=2;l<a;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},74998:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>f,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var n=r(87462),s=(r(67294),r(3905));const a={id:"index",title:"Introduction"},o=void 0,i={unversionedId:"reference/test/assertions/index",id:"reference/test/assertions/index",title:"Introduction",description:"Assertions are used to make sure that the assumptions on computations are exactly what we expect them to be. They are executable checks for a property that must be true in our code. Also, they can be seen as a specification of a program and facilitate understanding of programs.",source:"@site/docs/reference/test/assertions/index.md",sourceDirName:"reference/test/assertions",slug:"/reference/test/assertions/",permalink:"/reference/test/assertions/",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/reference/test/assertions/index.md",tags:[],version:"current",frontMatter:{id:"index",title:"Introduction"},sidebar:"reference-sidebar",previous:{title:"JUnit Integration",permalink:"/reference/test/junit-integration"},next:{title:"Smart Assertions",permalink:"/reference/test/assertions/smart-assertions"}},c={},l=[],p={toc:l},u="wrapper";function f(e){let{components:t,...r}=e;return(0,s.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Assertions are used to make sure that the assumptions on computations are exactly what we expect them to be. They are ",(0,s.kt)("em",{parentName:"p"},"executable checks")," for a property that must be true in our code. Also, they can be seen as a ",(0,s.kt)("em",{parentName:"p"},"specification of a program")," and facilitate understanding of programs."),(0,s.kt)("p",null,"We have two types of methods for writing test assertions:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("a",{parentName:"strong",href:"/reference/test/assertions/smart-assertions"},"Smart Assertions")),"\u2014 This is a unified syntax for asserting both ordinary values and ZIO effects using ",(0,s.kt)("inlineCode",{parentName:"li"},"assertTrue")," method."),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("a",{parentName:"strong",href:"/reference/test/assertions/classic-assertions"},"Classic Assertions")),"\u2014 This one is the classic old-fashioned way of asserting ordinary values (",(0,s.kt)("inlineCode",{parentName:"li"},"assert"),") and ZIO effects (",(0,s.kt)("inlineCode",{parentName:"li"},"assertZIO"),").")))}f.isMDXComponent=!0}}]);