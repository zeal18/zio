"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[13046],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=a.createContext({}),s=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(m.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,m=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(n),d=r,f=c["".concat(m,".").concat(d)]||c[d]||u[d]||i;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},67415:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const i={id:"index",title:"Introduction to ZStream"},o=void 0,l={unversionedId:"reference/stream/zstream/index",id:"reference/stream/zstream/index",title:"Introduction to ZStream",description:"A ZStream[R, E, O] is a description of a program that, when evaluated, may emit zero or more values of type O, may fail with errors of type E, and uses an environment of type R.",source:"@site/docs/reference/stream/zstream/index.md",sourceDirName:"reference/stream/zstream",slug:"/reference/stream/zstream/",permalink:"/reference/stream/zstream/",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/reference/stream/zstream/index.md",tags:[],version:"current",frontMatter:{id:"index",title:"Introduction to ZStream"},sidebar:"reference-sidebar",previous:{title:"Chunk",permalink:"/reference/stream/chunk"},next:{title:"Type Aliases",permalink:"/reference/stream/zstream/type-aliases"}},m={},s=[],p={toc:s},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"ZStream[R, E, O]")," is a description of a program that, when evaluated, may emit zero or more values of type ",(0,r.kt)("inlineCode",{parentName:"p"},"O"),", may fail with errors of type ",(0,r.kt)("inlineCode",{parentName:"p"},"E"),", and uses an environment of type ",(0,r.kt)("inlineCode",{parentName:"p"},"R"),"."),(0,r.kt)("p",null,"One way to think of ",(0,r.kt)("inlineCode",{parentName:"p"},"ZStream")," is as a ",(0,r.kt)("inlineCode",{parentName:"p"},"ZIO")," program that could emit multiple values. As we know, a ",(0,r.kt)("inlineCode",{parentName:"p"},"ZIO[R, E, A]")," data type, is a functional effect which is a description of a program that needs an environment of type ",(0,r.kt)("inlineCode",{parentName:"p"},"R"),", it may end with an error of type ",(0,r.kt)("inlineCode",{parentName:"p"},"E"),", and in case of success, it returns a value of type ",(0,r.kt)("inlineCode",{parentName:"p"},"A"),". The important note about ",(0,r.kt)("inlineCode",{parentName:"p"},"ZIO")," effects is that in the case of success they always end with exactly one value. There is no optionality here, no multiple infinite values, we always get exact value:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'val failedEffect: ZIO[Any, String, Nothing]       = ZIO.fail("fail!")\nval oneIntValue : ZIO[Any, Nothing, Int]          = ZIO.succeed(3)\nval oneListValue: ZIO[Any, Nothing, List[Int]]    = ZIO.succeed(List(1, 2, 3))\nval oneOption   : ZIO[Any, Nothing , Option[Int]] = ZIO.succeed(None)\n')),(0,r.kt)("p",null,"A functional stream is pretty similar, it is a description of a program that requires an environment of type ",(0,r.kt)("inlineCode",{parentName:"p"},"R")," and it may signal with errors of type ",(0,r.kt)("inlineCode",{parentName:"p"},"E")," and it yields ",(0,r.kt)("inlineCode",{parentName:"p"},"O"),", but the difference is that it will yield zero or more values."),(0,r.kt)("p",null,"So a ",(0,r.kt)("inlineCode",{parentName:"p"},"ZStream")," represents one of the following cases in terms of its elements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"An Empty Stream")," \u2014 It might end up empty; which represent an empty stream, e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"ZStream.empty"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"One Element Stream")," \u2014 It can represent a stream with just one value, e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"ZStream.succeed(3)"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Multiple Finite Element Stream")," \u2014 It can represent a stream of finite values, e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"ZStream.range(1, 10)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Multiple Infinite Element Stream")," \u2014 It can even represent a stream that ",(0,r.kt)("em",{parentName:"li"},"never ends")," as an infinite stream, e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"ZStream.iterate(1)(_ + 1)"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"import zio.stream.ZStream\nval emptyStream         : ZStream[Any, Nothing, Nothing]   = ZStream.empty\nval oneIntValueStream   : ZStream[Any, Nothing, Int]       = ZStream.succeed(4)\nval oneListValueStream  : ZStream[Any, Nothing, List[Int]] = ZStream.succeed(List(1, 2, 3))\nval finiteIntStream     : ZStream[Any, Nothing, Int]       = ZStream.range(1, 10)\nval infiniteIntStream   : ZStream[Any, Nothing, Int]       = ZStream.iterate(1)(_ + 1)\n")),(0,r.kt)("p",null,"Another example of a stream is when we're pulling a Kafka topic or reading from a socket. There is no inherent definition of an end there. Stream elements arrive at some point, or even they might never arrive at any point."),(0,r.kt)("p",null,"Based on type parameters of ",(0,r.kt)("inlineCode",{parentName:"p"},"ZStream"),", there are 4 types of streams:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"ZStream[Any, Nothing, O]")," \u2014 A stream that emits ",(0,r.kt)("inlineCode",{parentName:"li"},"O")," values and cannot fail."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"ZStream[Any, Throwable, O]")," \u2014 A stream that emits ",(0,r.kt)("inlineCode",{parentName:"li"},"O")," values and can fail with ",(0,r.kt)("inlineCode",{parentName:"li"},"Throwable"),"."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"ZStream[Any, Nothing, Nothing]")," \u2014 A stream that emits no elements."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"ZStream[R, E, O]")," \u2014 A stream that requires access to the ",(0,r.kt)("inlineCode",{parentName:"li"},"R")," service, can fail with error of type ",(0,r.kt)("inlineCode",{parentName:"li"},"E")," and emits ",(0,r.kt)("inlineCode",{parentName:"li"},"O")," values.")))}u.isMDXComponent=!0}}]);