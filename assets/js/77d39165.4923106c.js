"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[85652],{3905:(e,r,n)=>{n.d(r,{Zo:()=>p,kt:()=>g});var t=n(67294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=t.createContext({}),l=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):c(c({},r),e)),n},p=function(e){var r=l(e.components);return t.createElement(s.Provider,{value:r},e.children)},h="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),h=l(n),m=o,g=h["".concat(s,".").concat(m)]||h[m]||u[m]||a;return n?t.createElement(g,c(c({ref:r},p),{},{components:n})):t.createElement(g,c({ref:r},p))}));function g(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=m;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[h]="string"==typeof e?e:o,c[1]=i;for(var l=2;l<a;l++)c[l]=n[l];return t.createElement.apply(null,c)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},26647:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var t=n(87462),o=(n(67294),n(3905));const a={id:"merging-the-error-channel-into-the-success-channel",title:"Merging the Error Channel into the Success Channel"},c=void 0,i={unversionedId:"reference/error-management/operations/merging-the-error-channel-into-the-success-channel",id:"reference/error-management/operations/merging-the-error-channel-into-the-success-channel",title:"Merging the Error Channel into the Success Channel",description:"With ZIO#merge we can merge the error channel into the success channel:",source:"@site/docs/reference/error-management/operations/merging-the-error-channel-into-the-success-channel.md",sourceDirName:"reference/error-management/operations",slug:"/reference/error-management/operations/merging-the-error-channel-into-the-success-channel",permalink:"/reference/error-management/operations/merging-the-error-channel-into-the-success-channel",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/reference/error-management/operations/merging-the-error-channel-into-the-success-channel.md",tags:[],version:"current",frontMatter:{id:"merging-the-error-channel-into-the-success-channel",title:"Merging the Error Channel into the Success Channel"},sidebar:"reference-sidebar",previous:{title:"Flattening Optional Error Types",permalink:"/reference/error-management/operations/flattening-optional-error-types"},next:{title:"Flipping Error and Success Channels",permalink:"/reference/error-management/operations/flipping-error-and-success-channels"}},s={},l=[],p={toc:l},h="wrapper";function u(e){let{components:r,...n}=e;return(0,o.kt)(h,(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"With ",(0,o.kt)("inlineCode",{parentName:"p"},"ZIO#merge")," we can merge the error channel into the success channel:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import zio._\n\nval merged : ZIO[Any, Nothing, String] =\n  ZIO.fail("Oh uh!") // ZIO[Any, String, Nothing]\n    .merge           // ZIO[Any, Nothing, String]\n')),(0,o.kt)("p",null,"If the error and success channels were of different types, it would choose the supertype of both."))}u.isMDXComponent=!0}}]);