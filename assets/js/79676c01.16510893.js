"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[37162],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>b});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,b=d["".concat(i,".").concat(u)]||d[u]||m[u]||o;return n?r.createElement(b,s(s({ref:t},l),{},{components:n})):r.createElement(b,s({ref:t},l))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[d]="string"==typeof e?e:a,s[1]=c;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},86632:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const o={id:"websocket-server",title:"WebSocket Server Example",sidebar_label:"WebSocket Server"},s=void 0,c={unversionedId:"zio-http/examples/advanced/websocket-server",id:"zio-http/examples/advanced/websocket-server",title:"WebSocket Server Example",description:"",source:"@site/docs/zio-http/examples/advanced/websocket-server.md",sourceDirName:"zio-http/examples/advanced",slug:"/zio-http/examples/advanced/websocket-server",permalink:"/zio-http/examples/advanced/websocket-server",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/zio-http/examples/advanced/websocket-server.md",tags:[],version:"current",frontMatter:{id:"websocket-server",title:"WebSocket Server Example",sidebar_label:"WebSocket Server"},sidebar:"ecosystem-sidebar",previous:{title:"Streaming Response",permalink:"/zio-http/examples/advanced/streaming-response"},next:{title:"ZIO Insight",permalink:"/zio-insight/"}},i={},p=[],l={toc:p},d="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'import zio._\n\nimport zio.http.ChannelEvent.{ExceptionCaught, Read, UserEvent, UserEventTriggered}\nimport zio.http._\n\nobject WebSocketAdvanced extends ZIOAppDefault {\n\n  val socketApp: SocketApp[Any] =\n    Handler.webSocket { channel =>\n      channel.receiveAll {\n        case Read(WebSocketFrame.Text("end")) =>\n          channel.shutdown\n\n        // Send a "bar" if the server sends a "foo"\n        case Read(WebSocketFrame.Text("foo")) =>\n          channel.send(Read(WebSocketFrame.text("bar")))\n\n        // Send a "foo" if the server sends a "bar"\n        case Read(WebSocketFrame.Text("bar")) =>\n          channel.send(Read(WebSocketFrame.text("foo")))\n\n        // Echo the same message 10 times if it\'s not "foo" or "bar"\n        case Read(WebSocketFrame.Text(text)) =>\n          channel.send(Read(WebSocketFrame.text(text))).repeatN(10)\n\n        // Send a "greeting" message to the server once the connection is established\n        case UserEventTriggered(UserEvent.HandshakeComplete) =>\n          channel.send(Read(WebSocketFrame.text("Greetings!")))\n\n        // Log when the channel is getting closed\n        case Read(WebSocketFrame.Close(status, reason)) =>\n          Console.printLine("Closing channel with status: " + status + " and reason: " + reason)\n\n        // Print the exception if it\'s not a normal close\n        case ExceptionCaught(cause) =>\n          Console.printLine(s"Channel error!: ${cause.getMessage}")\n\n        case _ =>\n          ZIO.unit\n      }\n    }\n\n  val app: Http[Any, Nothing, Request, Response] =\n    Http.collectZIO[Request] {\n      case Method.GET -> Root / "greet" / name  => ZIO.succeed(Response.text(s"Greetings ${name}!"))\n      case Method.GET -> Root / "subscriptions" => socketApp.toResponse\n    }\n\n  override val run = Server.serve(app).provide(Server.default)\n}\n')))}m.isMDXComponent=!0}}]);