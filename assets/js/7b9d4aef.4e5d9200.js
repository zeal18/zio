"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[82066],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,y=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(y,a(a({ref:t},p),{},{components:n})):r.createElement(y,a({ref:t},p))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},70040:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const i={id:"zio-aws-s3",title:"ZIO AWS S3"},a=void 0,s={unversionedId:"ecosystem/community/zio-aws-s3",id:"ecosystem/community/zio-aws-s3",title:"ZIO AWS S3",description:"ZIO AWS S3 is a ZIO integration with AWS S3 SDK.",source:"@site/docs/ecosystem/community/zio-aws-s3.md",sourceDirName:"ecosystem/community",slug:"/ecosystem/community/zio-aws-s3",permalink:"/ecosystem/community/zio-aws-s3",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/ecosystem/community/zio-aws-s3.md",tags:[],version:"current",frontMatter:{id:"zio-aws-s3",title:"ZIO AWS S3"},sidebar:"ecosystem-sidebar",previous:{title:"ZIO Arrow",permalink:"/ecosystem/community/zio-arrow"},next:{title:"ZIO gRPC",permalink:"/ecosystem/community/zio-grpc"}},l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Installation",id:"installation",level:2},{value:"Example",id:"example",level:2}],p={toc:c},m="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/zio-mesh/zio-aws-s3"},"ZIO AWS S3")," is a ZIO integration with AWS S3 SDK."),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"This project aims to ease ZIO integration with AWS S3, providing a clean, simple and efficient API."),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"In order to use this library, we need to add the following line in our ",(0,o.kt)("inlineCode",{parentName:"p"},"build.sbt")," file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'libraryDependencies += "io.github.neurodyne" %% "zio-aws-s3" % "0.4.13"\n')),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import software.amazon.awssdk.regions.Region\nimport software.amazon.awssdk.services.s3.S3AsyncClient\nimport zio.{ExitCode, URIO, _}\nimport zio_aws_s3.AwsApp.AwsLink\nimport zio_aws_s3.{AwsAgent, AwsApp}\n\nimport scala.jdk.CollectionConverters._\n\nobject ZIOAWSS3Example extends zio.App {\n  val BUCKET = "<bucket name>"\n\n  val awsEnv: ZLayer[S3AsyncClient, Throwable, AwsLink] =\n    AwsApp.ExtLayer.live >>> AwsApp.AwsLink.live\n\n  val app: ZIO[Any, Throwable, Unit] = for {\n    s3 <- AwsAgent.createClient(Region.US_WEST_2, "<endpoint>")\n    response <- AwsApp.listBuckets().provide(awsEnv).provideEnvironment(s3)\n    buckets <- Task(response.buckets.asScala.toList.map(_.name))\n    _ = buckets.foreach(println)\n  } yield ()\n\n  override def run(args: List[String]): URIO[zio.ZEnv, ExitCode] =\n    app.exitCode\n}\n')))}u.isMDXComponent=!0}}]);