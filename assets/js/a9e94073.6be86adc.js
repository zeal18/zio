"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[57071],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=c(r),d=i,f=s["".concat(p,".").concat(d)]||s[d]||m[d]||o;return r?n.createElement(f,a(a({ref:t},u),{},{components:r})):n.createElement(f,a({ref:t},u))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},49699:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=r(87462),i=(r(67294),r(3905));const o={id:"index",title:"Introduction to ZIO Interop Twitter",sidebar_label:"ZIO Interop Twitter"},a=void 0,l={unversionedId:"zio-interop-twitter/index",id:"zio-interop-twitter/index",title:"Introduction to ZIO Interop Twitter",description:"This library provides capability to convert Twitter Future into ZIO Task.",source:"@site/docs/zio-interop-twitter/index.md",sourceDirName:"zio-interop-twitter",slug:"/zio-interop-twitter/",permalink:"/zio-interop-twitter/",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/zio-interop-twitter/index.md",tags:[],version:"current",frontMatter:{id:"index",title:"Introduction to ZIO Interop Twitter",sidebar_label:"ZIO Interop Twitter"},sidebar:"ecosystem-sidebar",previous:{title:"ZIO Interop Scalaz",permalink:"/zio-interop-scalaz/"},next:{title:"izmumi-reflect",permalink:"/izumi-reflect/"}},p={},c=[{value:"Example",id:"example",level:3}],u={toc:c},s="wrapper";function m(e){let{components:t,...r}=e;return(0,i.kt)(s,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This library provides capability to convert Twitter ",(0,i.kt)("inlineCode",{parentName:"p"},"Future")," into ZIO ",(0,i.kt)("inlineCode",{parentName:"p"},"Task"),"."),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'import com.twitter.util.Future\nimport zio.Console._\nimport zio.interop.twitter._\nimport zio.{ Console, Exit, Task, URIO, ZIOAppDefault }\n\nobject Example extends ZIOAppDefault {\n  def run = \n      for {\n        _        <- Console.printLine("Hello! What is your name?")\n        name     <- Console.readLine\n        greeting <- Task.fromTwitterFuture(greet(name))\n        _        <- Console.printLine(greeting)\n      } yield ()\n\n  private def greet(name: String): Future[String] = Future.value(s"Hello, $name!")\n\n}\n')))}m.isMDXComponent=!0}}]);