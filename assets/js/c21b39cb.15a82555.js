"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[19474],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(r),d=a,g=p["".concat(l,".").concat(d)]||p[d]||h[d]||i;return r?n.createElement(g,s(s({ref:t},u),{},{components:r})):n.createElement(g,s({ref:t},u))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[p]="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},19767:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const i={id:"graphql-webservice",title:"ZIO Quickstart: Building GraphQL Web Service",sidebar_label:"GraphQL Web Service"},s=void 0,o={unversionedId:"guides/quickstarts/graphql-webservice",id:"guides/quickstarts/graphql-webservice",title:"ZIO Quickstart: Building GraphQL Web Service",description:"This quickstart shows how to build a GraphQL web service using ZIO. It uses",source:"@site/docs/guides/quickstarts/graphql-webservice.md",sourceDirName:"guides/quickstarts",slug:"/guides/quickstarts/graphql-webservice",permalink:"/guides/quickstarts/graphql-webservice",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/guides/quickstarts/graphql-webservice.md",tags:[],version:"current",frontMatter:{id:"graphql-webservice",title:"ZIO Quickstart: Building GraphQL Web Service",sidebar_label:"GraphQL Web Service"},sidebar:"guides-sidebar",previous:{title:"RESTful Web Service",permalink:"/guides/quickstarts/restful-webservice"},next:{title:"Making a ZIO application configurable",permalink:"/guides/tutorials/configurable-zio-application"}},l={},c=[{value:"Running The Example",id:"running-the-example",level:2},{value:"Testing The Quickstart",id:"testing-the-quickstart",level:2}],u={toc:c},p="wrapper";function h(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This quickstart shows how to build a GraphQL web service using ZIO. It uses"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://zio.dev/zio-http/"},"ZIO HTTP")," for the HTTP server"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://ghostdogpr.github.io/caliban/"},"Caliban")," for the GraphQL")),(0,a.kt)("p",null,"Creating GraphQL API using Caliban is an easy process. We can define our data models using case classes and ADTs. Then Caliban can derive the whole GraphQL schema from these data models."),(0,a.kt)("h2",{id:"running-the-example"},"Running The Example"),(0,a.kt)("p",null,"First, open the console and clone the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/zio/zio-quickstarts"},"ZIO Quickstarts")," project using ",(0,a.kt)("inlineCode",{parentName:"p"},"git")," (or you can simply download the project) and then change the directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"git clone git@github.com:zio/zio-quickstarts.git \ncd zio-quickstarts/zio-quickstart-graphql-webservice\n")),(0,a.kt)("p",null,"Once you are inside the project directory, run the application:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sbt run\n")),(0,a.kt)("h2",{id:"testing-the-quickstart"},"Testing The Quickstart"),(0,a.kt)("p",null,"In this project, we have defined models of our employees with their names and roles. Then using GraphQL annotations, we asked Caliban to derive the GraphQL schema from these models."),(0,a.kt)("p",null,"So we can query all the employees that are software developers using the GraphQL query:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"query{\n  employees(role: SoftwareDeveloper){\n    name\n    role\n  }\n}\n")),(0,a.kt)("p",null,"To run this query, we can use any of the GraphGL clients or use the following curl command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl 'http://localhost:8088/api/graphql' --data-binary '{\"query\":\"query{\\n employees(role: SoftwareDeveloper){\\n name\\n role\\n}\\n}\"}'\n")),(0,a.kt)("p",null,"The response will be as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data" : {\n    "employees" : [\n      {\n        "name" : "Maria",\n        "role" : "SoftwareDeveloper"\n      },\n      {\n        "name" : "Peter",\n        "role" : "SoftwareDeveloper"\n      }\n    ]\n  }\n}\n')))}h.isMDXComponent=!0}}]);