"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[18012],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),u=r,m=d["".concat(s,".").concat(u)]||d[u]||h[u]||o;return n?a.createElement(m,i(i({ref:t},p),{},{components:n})):a.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},35028:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={id:"socket",title:"Socket"},i=void 0,l={unversionedId:"zio-http/dsl/socket/socket",id:"zio-http/dsl/socket/socket",title:"Socket",description:"Websocket support can be added to your Http application using the same Http domain, something like this \u2014",source:"@site/docs/zio-http/dsl/socket/socket.md",sourceDirName:"zio-http/dsl/socket",slug:"/zio-http/dsl/socket/",permalink:"/zio-http/dsl/socket/",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/zio-http/dsl/socket/socket.md",tags:[],version:"current",frontMatter:{id:"socket",title:"Socket"},sidebar:"ecosystem-sidebar",previous:{title:"Middleware",permalink:"/zio-http/dsl/middleware"},next:{title:"WebSocketFrame",permalink:"/zio-http/dsl/socket/websocketframe"}},s={},c=[{value:"Channel",id:"channel",level:2},{value:"ChannelEvents",id:"channelevents",level:2},{value:"Using <code>Http</code>",id:"using-http",level:2}],p={toc:c},d="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Websocket support can be added to your Http application using the same ",(0,r.kt)("inlineCode",{parentName:"p"},"Http")," domain, something like this \u2014"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import zio.http._\nimport zio._\n\nval socket = Handler.webSocket { channel =>\n  channel.receiveAll {\n    case ChannelEvent.Read(WebSocketFrame.Text("foo")) =>\n      channel.send(ChannelEvent.Read(WebSocketFrame.text("bar")))\n    case _ =>\n      ZIO.unit\n  }\n}\n\nval http = Http.collectZIO[Request] {\n  case Method.GET -> Root / "subscriptions" => socket.toResponse\n}\n')),(0,r.kt)("p",null,"The WebSocket API leverages the already powerful ",(0,r.kt)("inlineCode",{parentName:"p"},"Http")," domain to write web socket apps. The difference is that instead\nof collecting ",(0,r.kt)("inlineCode",{parentName:"p"},"Request")," we collect ",(0,r.kt)("inlineCode",{parentName:"p"},"Channel")," or more specifically ",(0,r.kt)("inlineCode",{parentName:"p"},"WebSocketChannel"),". And, instead of\nreturning\na ",(0,r.kt)("inlineCode",{parentName:"p"},"Response")," we return ",(0,r.kt)("inlineCode",{parentName:"p"},"Unit"),", because we use the channel to write content directly."),(0,r.kt)("h2",{id:"channel"},"Channel"),(0,r.kt)("p",null,"Essentially, whenever there is a connection created between a server and client a channel is created on both sides. The\nchannel is a low level api that allows us to send and receive arbitrary messages."),(0,r.kt)("p",null,"When we upgrade a Http connection to WebSocket, we create a specialized channel that only allows websocket frames to be\nsent and received. The access to channel is available through the ",(0,r.kt)("inlineCode",{parentName:"p"},"Channel")," api."),(0,r.kt)("h2",{id:"channelevents"},"ChannelEvents"),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"ChannelEvent")," is an immutable, type-safe representation of an event that's happened on a channel, and it looks like\nthis:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"sealed trait ChannelEvent[A]\n")),(0,r.kt)("p",null,"It is the ",(0,r.kt)("strong",{parentName:"p"},"Event")," that was triggered. The type param ",(0,r.kt)("inlineCode",{parentName:"p"},"A")," on the ChannelEvent represents the kind of message the event contains."),(0,r.kt)("p",null,"The type ",(0,r.kt)("inlineCode",{parentName:"p"},"WebSocketChannelEvent")," is a type alias to ",(0,r.kt)("inlineCode",{parentName:"p"},"ChannelEvent[WebsocketFrame]"),". Meaning an event that contains ",(0,r.kt)("inlineCode",{parentName:"p"},"WebSocketFrame")," typed messages."),(0,r.kt)("h2",{id:"using-http"},"Using ",(0,r.kt)("inlineCode",{parentName:"h2"},"Http")),(0,r.kt)("p",null,"We can use ",(0,r.kt)("inlineCode",{parentName:"p"},"Http.collect")," to select the events that we care about for our use case, like in the above example we are\nonly interested in the ",(0,r.kt)("inlineCode",{parentName:"p"},"ChannelRead")," event. There are other life cycle events such as ",(0,r.kt)("inlineCode",{parentName:"p"},"ChannelRegistered"),"\nand ",(0,r.kt)("inlineCode",{parentName:"p"},"ChannelUnregistered")," that one might want to hook onto for some other use cases."))}h.isMDXComponent=!0}}]);