"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[5349],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=d(n),g=i,f=u["".concat(c,".").concat(g)]||u[g]||l[g]||s;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,a=new Array(s);a[0]=g;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:i,a[1]=o;for(var d=2;d<s;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},87178:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var r=n(87462),i=(n(67294),n(3905));const s={id:"debugging-and-diagnostics",title:"Debugging and Diagnostics"},a=void 0,o={unversionedId:"reference/test/aspects/debugging-and-diagnostics",id:"reference/test/aspects/debugging-and-diagnostics",title:"Debugging and Diagnostics",description:"Debugging",source:"@site/docs/reference/test/aspects/debugging-and-diagnostics.md",sourceDirName:"reference/test/aspects",slug:"/reference/test/aspects/debugging-and-diagnostics",permalink:"/reference/test/aspects/debugging-and-diagnostics",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/reference/test/aspects/debugging-and-diagnostics.md",tags:[],version:"current",frontMatter:{id:"debugging-and-diagnostics",title:"Debugging and Diagnostics"},sidebar:"reference-sidebar",previous:{title:"Conditional Aspects",permalink:"/reference/test/aspects/conditional"},next:{title:"Environment-specific Tests",permalink:"/reference/test/aspects/environment-specific-tests"}},c={},d=[{value:"Debugging",id:"debugging",level:2},{value:"Diagnostics",id:"diagnostics",level:2}],p={toc:d},u="wrapper";function l(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"debugging"},"Debugging"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"TestConsole")," service has two modes debug and silent state. ZIO Test has two corresponding test aspects to switch the debug state on and off:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"TestAspect.debug")," \u2014 When the ",(0,i.kt)("inlineCode",{parentName:"p"},"TestConsole")," is in the debug state, the console output is rendered to the standard output in addition to being written to the output buffer. We can manually enable this mode by using ",(0,i.kt)("inlineCode",{parentName:"p"},"TestAspect.debug")," test aspect.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"TestAspect.silent")," \u2014 This test aspect turns off the debug mode and turns on the silent mode. So the console output is only written to the output buffer and not rendered to the standard output."))),(0,i.kt)("h2",{id:"diagnostics"},"Diagnostics"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"diagnose")," is an aspect that runs each test on a separate fiber and prints a fiber dump if the test fails or has not terminated within the specified duration."))}l.isMDXComponent=!0}}]);