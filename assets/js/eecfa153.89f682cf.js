"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[44630],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>y});var i=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=i.createContext({}),c=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},m=function(e){var n=c(e.components);return i.createElement(l.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,m=a(e,["components","mdxType","originalType","parentName"]),p=c(t),d=r,y=p["".concat(l,".").concat(d)]||p[d]||u[d]||o;return t?i.createElement(y,s(s({ref:n},m),{},{components:t})):i.createElement(y,s({ref:n},m))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=d;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a[p]="string"==typeof e?e:r,s[1]=a;for(var c=2;c<o;c++)s[c]=t[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},45501:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=t(87462),r=(t(67294),t(3905));const o={id:"zio-kinesis",title:"ZIO Kinesis"},s=void 0,a={unversionedId:"ecosystem/community/zio-kinesis",id:"ecosystem/community/zio-kinesis",title:"ZIO Kinesis",description:"ZIO Kinesis is a ZIO-based AWS Kinesis client for Scala.",source:"@site/docs/ecosystem/community/zio-kinesis.md",sourceDirName:"ecosystem/community",slug:"/ecosystem/community/zio-kinesis",permalink:"/ecosystem/community/zio-kinesis",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/ecosystem/community/zio-kinesis.md",tags:[],version:"current",frontMatter:{id:"zio-kinesis",title:"ZIO Kinesis"},sidebar:"ecosystem-sidebar",previous:{title:"ZIO K8s",permalink:"/ecosystem/community/zio-k8s"},next:{title:"ZIO Pulsar",permalink:"/ecosystem/community/zio-pulsar"}},l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Installation",id:"installation",level:2},{value:"Example",id:"example",level:2}],m={toc:c},p="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(p,(0,i.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/svroonland/zio-kinesis"},"ZIO Kinesis")," is a ZIO-based AWS Kinesis client for Scala."),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"ZIO Kinesis is an interface to Amazon Kinesis Data Streams for consuming and producing data. This library is built on top of ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/zio/zio-aws"},"ZIO AWS"),", a library of automatically generated ZIO wrappers around AWS SDK methods."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"In order to use this library, we need to add the following line in our ",(0,r.kt)("inlineCode",{parentName:"p"},"build.sbt")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'libraryDependencies += "nl.vroste" %% "zio-kinesis" % "0.20.0"\n')),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"This is an example of consuming a stream from Amazon Kinesis:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import nl.vroste.zio.kinesis.client.serde.Serde\nimport nl.vroste.zio.kinesis.client.zionative.Consumer\nimport zio.clock.Clock\nimport zio.console.{Console, putStrLn}\nimport zio.duration._\nimport zio.logging.Logging\nimport zio.{ExitCode, URIO, _}\n\nobject ZIOKinesisConsumerExample extends zio.App {\n  val loggingLayer: ZLayer[Any, Nothing, Logging] =\n    (Console.live ++ Clock.live) >>>\n      Logging.console() >>>\n      Logging.withRootLoggerName(getClass.getName)\n\n  override def run(args: List[String]): URIO[zio.ZEnv, ExitCode] =\n    Consumer\n      .consumeWith(\n        streamName = "my-stream",\n        applicationName = "my-application",\n        deserializer = Serde.asciiString,\n        workerIdentifier = "worker1",\n        checkpointBatchSize = 1000L,\n        checkpointDuration = 5.minutes\n      )(record => putStrLn(s"Processing record $record"))\n      .provideCustom(Consumer.defaultEnvironment ++ loggingLayer)\n      .exitCode\n}\n')))}u.isMDXComponent=!0}}]);